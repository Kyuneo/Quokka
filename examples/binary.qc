LOAD_INT 0
LOAD_INT 1
LOAD_NULL
LOAD_INT 2
LOAD_INT 2
LOAD_INT 2
LOAD_INT 10
LOAD_INT 10
LOAD_INT 2
LOAD_INT 8
LOAD_INT 5
1
DEFINE_FUNCTION modulo 2 2 [2	LOAD_NAME argv	LOAD_CONST 1	GET_INDEX 1	LOAD_NAME argv	LOAD_CONST 0	GET_INDEX 1	BINARY_DIV	LOAD_NAME argv	LOAD_CONST 1	GET_INDEX 1	LOAD_NAME argv	LOAD_CONST 0	GET_INDEX 1	BINARY_SUB	BINARY_MUL	RETURN	]
5
DEFINE_FUNCTION lpadwith 3 3 [6	LOAD_NAME argv	LOAD_CONST 0	GET_INDEX 1	STORE_NAME pad	7	LOAD_NAME pad	LOAD_CONST 0	GET_INDEX 1	STORE_NAME pad	9	LOAD_NAME argv	LOAD_CONST 1	GET_INDEX 1	STORE_NAME first	10	LOAD_NAME argv	LOAD_CONST 3	GET_INDEX 1	STORE_NAME secnd	13	LOAD_NAME len	LOAD_NAME first	CALL 1	LOAD_NAME len	LOAD_NAME secnd	CALL 1	CMP_GT	JUMP_IF_FALSE 19	14	LOAD_CONST 0	STORE_NAME i	15	LOAD_CONST 1	LOAD_NAME len	LOAD_NAME first	CALL 1	LOAD_NAME len	LOAD_NAME secnd	CALL 1	BINARY_SUB	BINARY_ADD	LOAD_NAME i	CMP_LT	JUMP_IF_FALSE 18	16	LOAD_NAME first	LOAD_NAME pad	BINARY_ADD	STORE_NAME first	17	LOAD_CONST 1	LOAD_NAME i	BINARY_ADD	STORE_NAME i	JUMP_BACK 15	18	JUMP_TO 25	19	LOAD_NAME len	LOAD_NAME secnd	CALL 1	LOAD_NAME len	LOAD_NAME first	CALL 1	CMP_GT	JUMP_IF_FALSE 24	20	LOAD_CONST 0	STORE_NAME i	21	LOAD_CONST 1	LOAD_NAME len	LOAD_NAME secnd	CALL 1	LOAD_NAME len	LOAD_NAME first	CALL 1	BINARY_SUB	BINARY_ADD	LOAD_NAME i	CMP_LT	JUMP_IF_FALSE 24	22	LOAD_NAME secnd	LOAD_NAME pad	BINARY_ADD	STORE_NAME secnd	23	LOAD_CONST 1	LOAD_NAME i	BINARY_ADD	STORE_NAME i	JUMP_BACK 21	24	25	27	LOAD_NAME first	LOAD_NAME secnd	MAKE_LIST 2	RETURN	28	]
30
DEFINE_FUNCTION binary 1 1 [31	LOAD_NAME argv	LOAD_CONST 0	GET_INDEX 1	STORE_NAME n	32	LOAD_STRING ''	STORE_NAME b	33	LOAD_CONST 0	LOAD_NAME n	CMP_GT	JUMP_IF_FALSE 36	34	LOAD_NAME b	LOAD_NAME string	LOAD_NAME modulo	LOAD_NAME n	LOAD_CONST 4	CALL 2	CALL 1	BINARY_ADD	STORE_NAME b	35	LOAD_CONST 5	LOAD_NAME n	BINARY_DIV	STORE_NAME n	JUMP_BACK 33	36	37	LOAD_NAME b	RETURN	38	]
40
DEFINE_FUNCTION bintoint 1 1 [42	LOAD_NAME argv	LOAD_CONST 0	GET_INDEX 1	STORE_NAME num	43	LOAD_NAME num	STORE_NAME binary_val	44	LOAD_CONST 0	STORE_NAME decimal_val	45	LOAD_CONST 1	STORE_NAME base	46	LOAD_CONST 0	STORE_NAME rem	48	LOAD_CONST 0	LOAD_NAME num	CMP_GT	JUMP_IF_FALSE 53	49	LOAD_NAME modulo	LOAD_NAME num	LOAD_CONST 6	CALL 2	STORE_NAME rem	50	LOAD_NAME base	LOAD_NAME rem	LOAD_NAME decimal_val	BINARY_ADD	BINARY_MUL	STORE_NAME decimal_val	51	LOAD_CONST 7	LOAD_NAME num	BINARY_DIV	STORE_NAME num	52	LOAD_CONST 8	LOAD_NAME base	BINARY_MUL	STORE_NAME base	JUMP_BACK 48	53	55	LOAD_NAME decimal_val	RETURN	56	]
58
DEFINE_FUNCTION binxor 2 2 [59	LOAD_NAME lpadwith	LOAD_STRING '0'	LOAD_NAME argv	LOAD_CONST 0	GET_INDEX 1	LOAD_NAME argv	LOAD_CONST 1	GET_INDEX 1	CALL 3	STORE_NAME both	60	LOAD_NAME both	LOAD_CONST 0	GET_INDEX 1	STORE_NAME first	61	LOAD_NAME both	LOAD_CONST 1	GET_INDEX 1	STORE_NAME secnd	64	LOAD_STRING ''	STORE_NAME new	65	LOAD_CONST 0	STORE_NAME i	66	LOAD_NAME len	LOAD_NAME first	CALL 1	LOAD_NAME i	CMP_LT	JUMP_IF_FALSE 73	67	LOAD_NAME secnd	LOAD_NAME i	GET_INDEX 1	LOAD_NAME first	LOAD_NAME i	GET_INDEX 1	CMP_EQ	JUMP_IF_FALSE 69	68	LOAD_STRING '0'	LOAD_NAME new	BINARY_ADD	STORE_NAME new	JUMP_TO 71	69	70	LOAD_STRING '1'	LOAD_NAME new	BINARY_ADD	STORE_NAME new	71	72	LOAD_CONST 1	LOAD_NAME i	BINARY_ADD	STORE_NAME i	JUMP_BACK 66	73	75	LOAD_NAME long	LOAD_NAME new	CALL 1	RETURN	76	]
78
LOAD_NAME print
LOAD_STRING 'Enter first number  : '
CALL 1
79
LOAD_CONST 9
STORE_NAME one
81
LOAD_NAME print
LOAD_STRING 'Enter second number : '
CALL 1
82
LOAD_CONST 10
STORE_NAME two
84
LOAD_NAME binary
LOAD_NAME one
CALL 1
STORE_NAME b_one
85
LOAD_NAME binary
LOAD_NAME two
CALL 1
STORE_NAME b_two
87
LOAD_NAME println
LOAD_STRING 'BINARY:'
CALL 1
88
LOAD_NAME println
LOAD_NAME b_one
LOAD_STRING '^'
LOAD_NAME b_two
LOAD_STRING '\n'
CALL 4
90
LOAD_NAME binxor
LOAD_NAME b_one
LOAD_NAME b_two
CALL 2
STORE_NAME num
91
LOAD_NAME println
LOAD_NAME one
LOAD_STRING '^'
LOAD_NAME two
LOAD_STRING '='
LOAD_NAME bintoint
LOAD_NAME num
CALL 1
CALL 5
