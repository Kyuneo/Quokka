1
DEFINE_FUNCTION joinany 2 2 [2	LOAD_NAME argv	LOAD_INT 0	GET_INDEX 1	STORE_NAME strlst	3	LOAD_NAME argv	LOAD_INT 1	GET_INDEX 1	STORE_NAME joinstr	4	LOAD_STRING ''	STORE_NAME outstr	6	LOAD_INT 0	STORE_NAME i	7	LOAD_NAME i	LOAD_NAME len	LOAD_NAME strlst	CALL_FUNCTION 1	CMP_LT	JUMP_IF_FALSE 10	8	8	LOAD_NAME outstr	LOAD_NAME string	LOAD_NAME strlst	LOAD_NAME i	GET_INDEX 1	CALL_FUNCTION 1	LOAD_NAME joinstr	BINARY_ADD	BINARY_ADD	STORE_NAME outstr	9	9	LOAD_NAME i	LOAD_INT 1	BINARY_ADD	STORE_NAME i	JUMP_BACK 7	10	12	LOAD_NAME outstr	RETURN	13	]
15
DEFINE_FUNCTION binary 1 1 [16	LOAD_NAME argv	LOAD_INT 0	GET_INDEX 1	STORE_NAME n	17	MAKE_LIST 0	STORE_NAME b	18	LOAD_INT 0	STORE_NAME i	19	LOAD_NAME n	LOAD_INT 0	CMP_GT	JUMP_IF_FALSE 23	20	20	LOAD_NAME b	LOAD_NAME n	LOAD_INT 2	LOAD_NAME n	LOAD_INT 2	BINARY_DIV	BINARY_MUL	BINARY_SUB	MAKE_LIST 1	BINARY_ADD	STORE_NAME b	21	21	LOAD_NAME n	LOAD_INT 2	BINARY_DIV	STORE_NAME n	22	22	LOAD_NAME i	LOAD_INT 1	BINARY_ADD	STORE_NAME i	JUMP_BACK 19	23	24	LOAD_NAME joinany	LOAD_NAME b	LOAD_STRING ''	CALL_FUNCTION 2	RETURN	25	]
27
DEFINE_FUNCTION xor 2 2 [28	LOAD_NAME argv	LOAD_INT 0	GET_INDEX 1	STORE_NAME first	29	LOAD_NAME argv	LOAD_INT 1	GET_INDEX 1	STORE_NAME secnd	32	LOAD_NAME len	LOAD_NAME secnd	CALL_FUNCTION 1	LOAD_NAME len	LOAD_NAME first	CALL_FUNCTION 1	CMP_GT	JUMP_IF_FALSE 38	33	LOAD_INT 0	STORE_NAME i	34	LOAD_NAME i	LOAD_NAME len	LOAD_NAME secnd	CALL_FUNCTION 1	LOAD_NAME len	LOAD_NAME first	CALL_FUNCTION 1	BINARY_SUB	LOAD_INT 1	BINARY_ADD	CMP_LE	JUMP_IF_FALSE 37	35	LOAD_STRING '0'	LOAD_NAME first	BINARY_ADD	STORE_NAME first	36	36	LOAD_NAME i	LOAD_INT 1	BINARY_ADD	STORE_NAME i	JUMP_BACK 34	37	JUMP_TO 44	38	LOAD_NAME len	LOAD_NAME first	CALL_FUNCTION 1	LOAD_NAME len	LOAD_NAME secnd	CALL_FUNCTION 1	CMP_GT	JUMP_IF_FALSE 44	39	LOAD_INT 0	STORE_NAME i	40	LOAD_NAME i	LOAD_NAME len	LOAD_NAME first	CALL_FUNCTION 1	LOAD_NAME len	LOAD_NAME secnd	CALL_FUNCTION 1	BINARY_SUB	LOAD_INT 1	BINARY_ADD	CMP_LE	JUMP_IF_FALSE 43	41	LOAD_STRING '0'	LOAD_NAME secnd	BINARY_ADD	STORE_NAME secnd	42	42	LOAD_NAME i	LOAD_INT 1	BINARY_ADD	STORE_NAME i	JUMP_BACK 40	43	44	47	LOAD_STRING ''	STORE_NAME new	48	LOAD_INT 0	STORE_NAME i	49	LOAD_NAME i	LOAD_NAME len	LOAD_NAME first	CALL_FUNCTION 1	CMP_LT	JUMP_IF_FALSE 56	50	LOAD_NAME first	LOAD_NAME i	GET_INDEX 1	LOAD_NAME secnd	LOAD_NAME i	GET_INDEX 1	CMP_EQ	JUMP_IF_FALSE 52	51	51	LOAD_NAME new	LOAD_STRING '0'	BINARY_ADD	STORE_NAME new	JUMP_TO 54	52	53	53	LOAD_NAME new	LOAD_STRING '1'	BINARY_ADD	STORE_NAME new	54	55	55	LOAD_NAME i	LOAD_INT 1	BINARY_ADD	STORE_NAME i	JUMP_BACK 49	56	58	LOAD_NAME new	RETURN	59	]
61
LOAD_NAME binary
LOAD_INT 234
CALL_FUNCTION 1
STORE_NAME one
62
LOAD_NAME binary
LOAD_INT 17
CALL_FUNCTION 1
STORE_NAME two
63
LOAD_NAME xor
LOAD_NAME one
LOAD_NAME two
CALL_FUNCTION 2
STORE_NAME num
64
LOAD_NAME println
LOAD_NAME num
CALL_FUNCTION 1
