LOAD_NULL
LOAD_STRING ''
LOAD_STRING ' '
LOAD_STRING ' '
LOAD_INT 2
LOAD_INT 2
LOAD_INT 2
LOAD_STRING ' '
LOAD_STRING 'list'
LOAD_STRING '<'
LOAD_STRING '>[\n'
LOAD_STRING '  '
LOAD_STRING ',\n'
LOAD_STRING ']('
LOAD_STRING ')'
7
DEFINE_FUNCTION lpad 1 2 [8	
LOAD_INT_CONST 1	
LOAD_NAME argc	
CMP_EQ	
JUMP_IF_FALSE 11	
9	
LOAD_CONST 2	
STORE_NAME pad	
10	
LOAD_NAME argv	
LOAD_INT_CONST 0	
GET_INDEX 1	
STORE_NAME lst	
JUMP_TO 14	
11	
12	
LOAD_NAME argv	
LOAD_INT_CONST 0	
GET_INDEX 1	
LOAD_INT_CONST 0	
GET_INDEX 1	
STORE_NAME pad	
13	
LOAD_NAME argv	
LOAD_INT_CONST 1	
GET_INDEX 1	
STORE_NAME lst	
14	
16	
MAKE_LIST 0	
STORE_NAME new	
18	
LOAD_NAME len	
LOAD_NAME lst	
CALL 1	
STORE_NAME lstlen	
19	
LOAD_NAME max	
LOAD_NAME map	
LOAD_NAME len	
LOAD_NAME lst	
CALL 2	
CALL 1	
STORE_NAME largest	
21	
LOAD_INT_CONST 0	
STORE_NAME i	
22	
LOAD_NAME lstlen	
LOAD_NAME i	
CMP_LT	
JUMP_IF_FALSE 25	
23	
LOAD_NAME lst	
LOAD_NAME i	
GET_INDEX 1	
LOAD_NAME len	
LOAD_NAME lst	
LOAD_NAME i	
GET_INDEX 1	
CALL 1	
LOAD_NAME largest	
BINARY_SUB	
LOAD_NAME pad	
BINARY_MUL	
BINARY_ADD	
MAKE_LIST 1	
INPLACE_ADD new	
24	
LOAD_NAME i	
INCREMENT i	
JUMP_BACK 22	
25	
27	
LOAD_NAME new	
RETURN	
28	
]
32
DEFINE_FUNCTION cpad 1 2 [33	
LOAD_INT_CONST 1	
LOAD_NAME argc	
CMP_EQ	
JUMP_IF_FALSE 36	
34	
LOAD_CONST 3	
STORE_NAME pad	
35	
LOAD_NAME argv	
LOAD_INT_CONST 0	
GET_INDEX 1	
STORE_NAME lst	
JUMP_TO 39	
36	
37	
LOAD_NAME argv	
LOAD_INT_CONST 0	
GET_INDEX 1	
LOAD_INT_CONST 0	
GET_INDEX 1	
STORE_NAME pad	
38	
LOAD_NAME argv	
LOAD_INT_CONST 1	
GET_INDEX 1	
STORE_NAME lst	
39	
41	
MAKE_LIST 0	
STORE_NAME new	
43	
LOAD_NAME len	
LOAD_NAME lst	
CALL 1	
STORE_NAME lstlen	
44	
LOAD_NAME max	
LOAD_NAME map	
LOAD_NAME len	
LOAD_NAME lst	
CALL 2	
CALL 1	
STORE_NAME largest	
46	
LOAD_INT_CONST 0	
STORE_NAME i	
47	
LOAD_NAME lstlen	
LOAD_NAME i	
CMP_LT	
JUMP_IF_FALSE 56	
48	
LOAD_NAME println	
LOAD_NAME len	
LOAD_NAME lst	
LOAD_NAME i	
GET_INDEX 1	
CALL 1	
CALL 1	
49	
LOAD_NAME len	
LOAD_NAME lst	
LOAD_NAME i	
GET_INDEX 1	
CALL 1	
STORE_NAME aaa	
50	
LOAD_NAME println	
LOAD_NAME aaa	
LOAD_NAME type	
LOAD_NAME aaa	
CALL 1	
CALL 2	
51	
LOAD_CONST 4	
STORE_NAME a	
52	
LOAD_NAME println	
LOAD_NAME a	
LOAD_NAME type	
LOAD_NAME a	
CALL 1	
CALL 2	
53	
LOAD_NAME lst
LOAD_NAME i	
GET_INDEX 1	
LOAD_CONST 5	
LOAD_NAME len	
LOAD_NAME lst	
LOAD_NAME i	
GET_INDEX 1	
CALL 1	
LOAD_NAME largest	
BINARY_SUB	
BINARY_DIV	
LOAD_NAME pad	
BINARY_MUL	
BINARY_ADD	
STORE_NAME most	
54	
LOAD_NAME len	
LOAD_NAME most	
CALL 1	
LOAD_NAME largest	
BINARY_SUB	
LOAD_NAME pad	
BINARY_MUL	
LOAD_NAME most	
BINARY_ADD	
MAKE_LIST 1	
INPLACE_ADD new	
55	
LOAD_NAME i	
INCREMENT i	
JUMP_BACK 47	
56	
58	
LOAD_NAME new	
RETURN	
59	
]
63
DEFINE_FUNCTION padnum 3 3 [64	
LOAD_NAME argv	
LOAD_INT_CONST 0	
GET_INDEX 1	
LOAD_INT_CONST 0	
GET_INDEX 1	
STORE_NAME pad	
65	
LOAD_NAME argv	
LOAD_INT_CONST 1	
GET_INDEX 1	
STORE_NAME num	
66	
LOAD_NAME argv	
LOAD_CONST 6	
GET_INDEX 1	
STORE_NAME lst	
68	
MAKE_LIST 0	
STORE_NAME new	
70	
LOAD_NAME len	
LOAD_NAME lst	
CALL 1	
STORE_NAME lstlen	
72	
LOAD_INT_CONST 0	
STORE_NAME i	
73	
LOAD_NAME lstlen	
LOAD_NAME i	
CMP_LT	
JUMP_IF_FALSE 76	
74	
LOAD_NAME lst	
LOAD_NAME i	
GET_INDEX 1	
LOAD_NAME len	
LOAD_NAME lst	
LOAD_NAME i	
GET_INDEX 1	
CALL 1	
LOAD_NAME num	
BINARY_SUB	
LOAD_NAME pad	
BINARY_MUL	
BINARY_ADD	
MAKE_LIST 1	
INPLACE_ADD new	
75	
LOAD_NAME i	
INCREMENT i	
JUMP_BACK 73	
76	
78	
LOAD_NAME new	
RETURN	
79	
]
82
DEFINE_FUNCTION map 1 * [83	
LOAD_NAME argv	
LOAD_INT_CONST 1	
UNARY_SUB	
GET_INDEX 1	
STORE_NAME lst	
84	
MAKE_LIST 0	
STORE_NAME new	
86	
LOAD_NAME len	
LOAD_NAME lst	
CALL 1	
STORE_NAME lstlen	
87	
LOAD_INT_CONST 0	
STORE_NAME i	
89	
LOAD_NAME lstlen	
LOAD_NAME i	
CMP_LT	
JUMP_IF_FALSE 100	
90	
LOAD_NAME lst	
LOAD_NAME i	
GET_INDEX 1	
STORE_NAME item	
92	
LOAD_INT_CONST 0	
STORE_NAME j	
93	
LOAD_INT_CONST 1	
LOAD_NAME argc	
BINARY_SUB	
LOAD_NAME j	
CMP_LT	
JUMP_IF_FALSE 96	
94	
LOAD_NAME argv	
LOAD_NAME j	
GET_INDEX 1	
LOAD_NAME item	
CALL 1	
STORE_NAME item	
95	
LOAD_NAME j	
INCREMENT j	
JUMP_BACK 93	
96	
98	
LOAD_NAME item	
MAKE_LIST 1	
INPLACE_ADD new	
99	
LOAD_NAME i	
INCREMENT i	
JUMP_BACK 89	
100	
102	
LOAD_NAME new	
RETURN	
103	
]
106
DEFINE_FUNCTION same 1 1 [107	
LOAD_NAME argv	
LOAD_INT_CONST 0	
GET_INDEX 1	
STORE_NAME lst	
108	
LOAD_NAME lst	
LOAD_INT_CONST 0	
GET_INDEX 1	
STORE_NAME item	
109	
LOAD_NAME len	
LOAD_NAME lst	
CALL 1	
STORE_NAME lstlen	
111	
LOAD_INT_CONST 0	
STORE_NAME i	
112	
LOAD_NAME lstlen	
LOAD_NAME i	
CMP_LT	
JUMP_IF_FALSE 117	
113	
LOAD_NAME item	
LOAD_NAME lst	
LOAD_NAME i	
GET_INDEX 1	
CMP_NEQ	
JUMP_IF_FALSE 115	
114	
LOAD_NAME false	
RETURN	
115	
116	
LOAD_NAME i	
INCREMENT i	
JUMP_BACK 112	
117	
119	
LOAD_NAME true	
RETURN	
120	
]
123
DEFINE_FUNCTION any 1 1 [124	
LOAD_NAME argv	
LOAD_INT_CONST 0	
GET_INDEX 1	
STORE_NAME lst	
125	
LOAD_NAME len	
LOAD_NAME lst	
CALL 1	
STORE_NAME lstlen	
127	
LOAD_INT_CONST 0	
STORE_NAME i	
128	
LOAD_NAME lstlen	
LOAD_NAME i	
CMP_LT	
JUMP_IF_FALSE 133	
129	
LOAD_NAME lst	
LOAD_NAME i	
GET_INDEX 1	
JUMP_IF_FALSE 131	
130	
LOAD_NAME true	
RETURN	
131	
132	
LOAD_NAME i	
INCREMENT i	
JUMP_BACK 128	
133	
135	
LOAD_NAME false	
RETURN	
136	
]
139
DEFINE_FUNCTION all 1 1 [140	
LOAD_NAME argv	
LOAD_INT_CONST 0	
GET_INDEX 1	
STORE_NAME lst	
141	
LOAD_NAME len	
LOAD_NAME lst	
CALL 1	
STORE_NAME lstlen	
143	
LOAD_INT_CONST 0	
STORE_NAME i	
144	
LOAD_NAME lstlen	
LOAD_NAME i	
CMP_LT	
JUMP_IF_FALSE 149	
145	
LOAD_NAME lst	
LOAD_NAME i	
GET_INDEX 1	
BOOLEAN_NOT	
JUMP_IF_FALSE 147	
146	
LOAD_NAME false	
RETURN	
147	
148	
LOAD_NAME i	
INCREMENT i	
JUMP_BACK 144	
149	
151	
LOAD_NAME true	
RETURN	
152	
]
155
DEFINE_FUNCTION split 1 2 [156	
LOAD_INT_CONST 1	
LOAD_NAME argc	
CMP_EQ	
JUMP_IF_FALSE 159	
157	
LOAD_CONST 7	
STORE_NAME at	
158	
LOAD_NAME argv	
LOAD_INT_CONST 0	
GET_INDEX 1	
STORE_NAME str	
JUMP_TO 162	
159	
160	
LOAD_NAME argv	
LOAD_INT_CONST 0	
GET_INDEX 1	
STORE_NAME at	
161	
LOAD_NAME argv	
LOAD_INT_CONST 1	
GET_INDEX 1	
STORE_NAME str	
162	
164	
LOAD_NAME len	
LOAD_NAME str	
CALL 1	
STORE_NAME strlen	
165	
LOAD_CONST 1	
STORE_NAME current	
166	
MAKE_LIST 0	
STORE_NAME lst	
168	
LOAD_INT_CONST 0	
STORE_NAME i	
169	
LOAD_NAME strlen	
LOAD_NAME i	
CMP_LT	
JUMP_IF_FALSE 177	
170	
LOAD_NAME at	
LOAD_NAME str	
LOAD_NAME i	
GET_INDEX 1	
CMP_EQ	
JUMP_IF_FALSE 173	
171	
LOAD_NAME current	
MAKE_LIST 1	
INPLACE_ADD lst	
172	
LOAD_CONST 1	
STORE_NAME current	
JUMP_TO 175	
173	
174	
LOAD_NAME str	
LOAD_NAME i	
GET_INDEX 1	
INPLACE_ADD current	
175	
176	
LOAD_NAME i	
INCREMENT i	
JUMP_BACK 169	
177	
179	
LOAD_NAME current	
MAKE_LIST 1	
LOAD_NAME lst	
BINARY_ADD	
RETURN	
180	
]
183
DEFINE_FUNCTION strsum 0 * [184	
LOAD_CONST 1	
STORE_NAME str	
186	
LOAD_CONST 8	
LOAD_NAME type	
LOAD_NAME argv	
LOAD_INT_CONST 0	
GET_INDEX 1	
CALL 1	
CMP_EQ	
JUMP_IF_FALSE 194	
187	
LOAD_INT_CONST 0	
STORE_NAME a	
188	
LOAD_NAME argv	
LOAD_INT_CONST 0	
GET_INDEX 1	
STORE_NAME l	
189	
LOAD_NAME len	
LOAD_NAME l	
CALL 1	
STORE_NAME length	
190	
LOAD_NAME length	
LOAD_NAME a	
CMP_LT	
JUMP_IF_FALSE 193	
191	
LOAD_NAME l	
LOAD_NAME a	
GET_INDEX 1	
INPLACE_ADD str	
192	
LOAD_NAME a	
INCREMENT a	
JUMP_BACK 190	
193	
JUMP_TO 200	
194	
195	
LOAD_INT_CONST 0	
STORE_NAME a	
196	
LOAD_NAME argc	
LOAD_NAME a	
CMP_LT	
JUMP_IF_FALSE 199	
197	
LOAD_NAME argv	
LOAD_NAME a	
GET_INDEX 1	
INPLACE_ADD str	
198	
LOAD_NAME a	
INCREMENT a	
JUMP_BACK 196	
199	
200	
202	
LOAD_NAME str	
RETURN	
203	
]
206
DEFINE_FUNCTION pf 1 1 [207	
LOAD_NAME argv	
LOAD_INT_CONST 0	
GET_INDEX 1	
STORE_NAME obj	
208	
LOAD_CONST 10	
LOAD_NAME type	
LOAD_NAME obj	
CALL 1	
LOAD_CONST 9	
BINARY_ADD	
BINARY_ADD	
STORE_NAME s	
209	
LOAD_INT_CONST 0	
STORE_NAME i	
210	
LOAD_NAME len	
LOAD_NAME obj	
CALL 1	
LOAD_NAME i	
CMP_LT	
JUMP_IF_FALSE 213	
211	
LOAD_CONST 12	
LOAD_NAME disp	
LOAD_NAME obj	
LOAD_NAME i	
GET_INDEX 1	
CALL 1	
LOAD_CONST 11	
BINARY_ADD	
BINARY_ADD	
INPLACE_ADD s	
212	
LOAD_NAME i	
INCREMENT i	
JUMP_BACK 210	
213	
214	
LOAD_CONST 14	
LOAD_NAME string	
LOAD_NAME len	
LOAD_NAME obj	
CALL 1	
CALL 1	
LOAD_CONST 13	
LOAD_NAME s	
BINARY_ADD	
BINARY_ADD	
BINARY_ADD	
RETURN	
215	
]
